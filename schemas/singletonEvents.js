import { FiImage } from "react-icons/fi";
import slugify from "../utils/slugify";

export default {
  title: "Events",
  name: "events",
  type: "document",
  __experimental_actions: ["update", "create", "delete", "publish"],
  fields: [
    {
      title: "Title",
      name: "EventName",
      type: "string",
      validation: (Rule) => Rule.required(),
    },
    {
      title: "Slug",
      name: "slug",
      type: "slug",
      description:
        'This is required for page routing and can be auto-generated by pressing "generate"',
      options: {
        source: (doc) => {
          let titleSlug = "";
          let campaignSlug = "";
          if (doc.title) titleSlug = `${doc.title}`;
          if (doc.campaignTitle) campaignSlug = `-${doc.campaignTitle}`;
          return `${titleSlug}${campaignSlug}`;
        },
        maxLength: 96,
        slugify: (input) => slugify(`${input}`),
      },
      validation: (Rule) => Rule.required(),
    },
    {
      title: "Order Rank",
      name: "orderRank",
      type: "string",
      hidden: true,
    },
    {
      title: "Mobile Hero Image",
      name: "imageUrl",
      type: "defaultImage",
      validation: (Rule) => Rule.required(),
    },
    {
      title: "Intro Text",
      name: "introText",
      type: "text",
      rows: 4,
      description: "This should be a short description of the event.",
    },
    {
      title: "Main content",
      name: "description",
      type: "contentSimple",
      description: "This should be the main article for the event.",
    },
    {
      title: "Address",
      name: "venueAddress",
      type: "string",
      description: "Add the address for this event",
      validation: (Rule) => Rule.required(),
    },
    {
      title: "Age limit",
      name: "age",
      type: "string",
      description: "Age limit for this event",
    },
    {
      title: "Date & Time",
      name: "dateTime",
      type: "datetime",
      options: {
        dateFormat: "DD-MM-YYYY",
        timeFormat: "HH:mm",
        calendarTodayLabel: "Today",
      },
      description: "Date & Time of the event.",
      validation: (Rule) => Rule.required(),
    },
    {
      title: "Price",
      name: "price",
      type: "number",
      description: "Price listed for the event",
    },
    {
      title: "Ticket URL",
      name: "url",
      type: "string",
      description: "Add the ticket URL",
      validation: (Rule) => Rule.required(),
    },



    // ⬇️ SEO Settings
    {
      title: "SEO / Share Settings",
      name: "seo",
      type: "seo",
    },
  ],
  preview: {
    select: {
      title: "title",
    },
    prepare({ title }) {
      return {
        title,
      };
    },
  },
};
